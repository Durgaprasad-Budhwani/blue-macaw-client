{"version":3,"sources":["containers/SongDetailsContainer/reducers.js","containers/SongListContainer/actions.js","theme/Colors.js","containers/SongDetailsContainer/constants.js","containers/SongDetailsContainer/actions.js","containers/SongListContainer/constants.js","containers/SongListContainer/reducers.js","containers/QueueContainer/constants.js","containers/QueueContainer/reducers.js","sockets/constants.js","sockets/reducers.js","reducers/index.js","services/index.js","config/index.js","containers/SongListContainer/sagas.js","sockets/actions.js","containers/SongDetailsContainer/sagas.js","containers/QueueContainer/actions.js","sagas/index.js","sockets/index.js","store/configureStore.js","utils/history.js","components/common/Loader/index.js","utils/loadAsync.js","containers/NotFound/index.js","components/Queue/QueueItem.js","components/Queue/index.js","containers/QueueContainer/selectors.js","containers/QueueContainer/QueueContainer.js","components/MusicPlayer/Details.js","utils/formatSeconds.js","components/MusicPlayer/TrackInformation.js","components/MusicPlayer/index.js","containers/SongDetailsContainer/Track/SongTrackContainer.js","containers/SongListContainer/index.js","containers/SongDetailsContainer/Details/index.js","components/Footer/index.js","components/Header/index.js","containers/App/AppContainer.js","containers/App/selectors.js","containers/App/index.js","theme/Theme.js","AppContainer.js","serviceWorker.js","index.js","containers/SongDetailsContainer/selectors.js"],"names":["initialSong","_id","name","duration","description","license","size","path","composer","tags","category","error","isPlaying","progress","loading","currentSong","state","arguments","length","undefined","action","type","FETCH_SONG_DETAILS","Object","_Users_durgaprasad_code_blue_macaw_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","song","FETCH_SONG_DETAILS_ERROR","FETCH_SONG_DETAILS_SUCCESS","PLAY_SONG","PLAYING_SONG_ERROR","PLAYING_SONG_SUCCESS","PLAYING_SONG_PROGRESS","PAUSE_SONG","__webpack_require__","d","__webpack_exports__","getSongs","songsLoaded","songLoadingError","_constants__WEBPACK_IMPORTED_MODULE_0__","GET_SONGS","songs","GET_SONGS_SUCCESS","GET_SONGS_ERROR","primaryColor","primaryColorDark","primaryColorLight","accentColor","accentColorDark","accentColorLight","primaryText","backgroundContrastLightGradient","backgroundColorDark","backgroundDarkGradient","errorColor","concat","base","getSong","songFetchError","songFetchSuccess","playSong","pauseSong","playingSong","playingSongProgress","id","initialSongsInfo","objectSpread","ADD_TO_QUEUE","initialQueue","queue","newState","index","findIndex","item","toConsumableArray","slice","NEW_SONGS_PLAYED","SONG_RECOMMENDED","trendingSong","rootReducer","history","combineReducers","router","connectRouter","axios","defaults","baseURL","process","GetSongs","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","page","perPage","_ref2","data","wrap","_context","prev","next","get","params","sent","abrupt","res","t0","stop","this","_x","_x2","apply","GetSong","_ref3","_callee2","_ref4","_context2","_x3","GetLatestSongs","watchMusicListAsync","call","put","_marked","takeLatest","_marked2","newSongPlayed","GetSelectedSong","watchMusicAsync","payload","sagas_marked","sagas_marked2","rootSaga","all","fork","src_sagas_marked","configureSocket","socket","io","createSocketIoMiddleware","persistConfig","key","storage","blacklist","configureStore","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","persistedReducer","persistReducer","middleware","createLogger","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","persistor","persistStore","createHistory","basename","getWrapperClass","isInline","isInlineCover","getLoaderClass","LoadingWrapper","children","react_default","createElement","className","Loading","props","pastDelay","timedOut","Loader_LoadingWrapper","loadAsync","Component","Loadable","loader","Loader","delay","timeout","e","then","bind","withStyles","container","cursor","margin","padding","leftBorder","borderLeft","button","width","imageIcon","height","listItem","icon","fontSize","color","grey","_classnames","classes","isSame","Grid_default","direction","spacing","classnames","defineProperty","Divider_default","Button_default","onClick","alignItems","Hidden_default","mdDown","xs","md","sm","src","image","alt","Typography_default","noWrap","center","justify","Typography","align","variant","List_default","map","Queue_QueueItem","selectQueue","mapStateToProps","createStructuredSelector","createSelector","makeSelectSong","connect","dispatch","components_Queue","flex","songName","heading","overflow","wordSpace","marginBottom","maxWidth","format","val","Math","floor","formatSeconds","seconds","join","TrackInformation","play","_this","autoplay","currentTime","debounced","debounce","fn","event","audioContainer","addEventListener","updateProgress","end","onChange","removeEventListener","_this$audioContainer","_this$audioContainer2","setState","value","_this2","cancel","pause","paused","ended","readyState","_this$props","_this3","_this$props2","_this$state","autoPlay","preload","ref","url","Slider_default","v","handleAdjustProgress","aria-labelledby","grow","Button_Button","FastRewind_default","handleToggle","PlayArrow_default","Pause_default","FastForward_default","timing","React","PureComponent","defaultProps","marginRight","flexGrow","details","borderRight","alignContent","lg","MusicPlayer_Details","MusicPlayer_TrackInformation","SongTrackContainer","components_MusicPlayer","makeSelectIsLoading","makeSelectSongError","avatar","pointer","appBar","top","bottom","component","AppBar_default","position","Header","isDrawerVisible","Toolbar_default","IconButton_default","hamburger","showDrawer","aria-label","Menu_default","menu","Link","to","Avatar_default","Drawer_default","anchor","open","onClose","hideDrawer","verticalNavigation","QueueContainer_QueueContainer","theme","breakpoints","up","display","minWidth","paddingTop","backgroundColor","App","handleClose","components_Header","container1","smDown","content","Switch","Route","exact","SongListContainer","SongDetailsContainer","NotFound","components_Footer","Track_SongTrackContainer","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","nextProps","prevState","overflowY","background","unit","selectTrending","AppContainer","BlueMacawTheme","createMuiTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","secondary","contrastThreshold","tonalOffset","overrides","MuiAppBar","colorPrimary","positionAbsolute","MuiButton","label","MuiSnackbarContent","root","MuiDrawer","paper","MuiTooltip","tooltip","MuiLinearProgress","colorSecondary","Boolean","location","hostname","match","ReactDOM","render","es","integration_react","lib","core_styles","CssBaseline_default","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","lodash_get__WEBPACK_IMPORTED_MODULE_0__","lodash_get__WEBPACK_IMPORTED_MODULE_0___default","n","reselect__WEBPACK_IMPORTED_MODULE_1__","_reducers__WEBPACK_IMPORTED_MODULE_2__","selectCurrentSong"],"mappings":"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","file":"static/js/main.de75c0a0.chunk.js","sourcesContent":["// @flow\nimport type { Song } from '../../types';\nimport {\n    FETCH_SONG_DETAILS,\n    FETCH_SONG_DETAILS_ERROR,\n    FETCH_SONG_DETAILS_SUCCESS,\n    PLAY_SONG, PLAYING_SONG_ERROR, PAUSE_SONG, PLAYING_SONG_PROGRESS, PLAYING_SONG_SUCCESS,\n} from './constants';\n\nexport const initialSong: Song = {\n    _id: null,\n    name: null,\n    duration: 0,\n    description: null,\n    license: null,\n    size: null,\n    path: null,\n    composer: [],\n    tags: [],\n    category: null,\n    error: null,\n    isPlaying: false,\n    progress: 0,\n    loading: false,\n};\n\nconst currentSong = (state: Song = initialSong, action: any): Song => {\n    switch (action.type) {\n        case FETCH_SONG_DETAILS:\n            return { ...action.song, error: null, loading: true };\n        case FETCH_SONG_DETAILS_ERROR:\n            return { ...state, error: action.error, loading: false };\n        case FETCH_SONG_DETAILS_SUCCESS:\n            return { ...action.song, error: null, loading: false };\n        case PLAY_SONG:\n            return { ...action.song, error: null };\n        case PLAYING_SONG_ERROR:\n            return { ...state, error: action.error };\n        case PLAYING_SONG_SUCCESS:\n            return { ...state, error: null, isPlaying: true };\n        case PLAYING_SONG_PROGRESS:\n            return { ...state, error: null, progress: action.progress, isPlaying: !!action.isPlaying };\n        case PAUSE_SONG:\n            return { ...state, error: null, isPlaying: false };\n        default:\n            return state;\n    }\n};\n\nexport default currentSong;\n","import { GET_SONGS, GET_SONGS_SUCCESS, GET_SONGS_ERROR } from './constants';\n\nexport function getSongs() {\n    return {\n        type: GET_SONGS,\n    };\n}\n\nexport function songsLoaded(songs) {\n    return {\n        type: GET_SONGS_SUCCESS,\n        songs,\n    };\n}\n\nexport function songLoadingError(error) {\n    return {\n        type: GET_SONGS_ERROR,\n        error,\n    };\n}\n","export const primaryColor = '#04D0F2';\nexport const primaryColorDark = '#0399B2';\nexport const primaryColorLight = '#04DBFF';\n\nexport const accentColor = '#DA0443';\nexport const accentColorDark = '#C0043B';\nexport const accentColorLight = '#E70447';\nexport const accentColorDarkGradient = `linear-gradient(\n  to bottom right,\n  ${accentColor},\n  ${accentColorDark}\n)`;\nexport const accentColorLightGradient = `linear-gradient(\n  to bottom right,\n  ${accentColorLight},\n  ${accentColor}\n)`;\n\nexport const primaryText = '#FEFEFE';\n\nexport const backgroundContrast = '#242A43';\nexport const backgroundContrastDark = '#1B2033';\nexport const backgroundContrastLight = '#4D5A8F';\nexport const backgroundContrastDarkGradient = `linear-gradient(\n  to bottom right,\n  ${backgroundContrast},\n  ${backgroundContrastDark}\n)`;\nexport const backgroundContrastLightGradient = `linear-gradient(\n  to bottom right,\n  ${backgroundContrastLight},\n  ${backgroundContrast}\n)`;\n\nexport const backgroundColor = '#040424';\nexport const backgroundColorDark = '#01011C';\nexport const backgroundColorLight = '#060633';\nexport const backgroundDarkGradient = `linear-gradient(\n  to bottom right,\n  ${backgroundColor},\n  ${backgroundColorDark}\n)`;\nexport const backgroundLightGradient = `linear-gradient(\n  to bottom right,\n  ${backgroundColorLight},\n  ${backgroundColor}\n)`;\n\nexport const errorColor = '#C2043C';\n","const base = '@@Containers/SongTrackContainer/';\n\nexport const FETCH_SONG_DETAILS = `${base}FETCH_SONG_DETAILS`;\nexport const FETCH_SONG_DETAILS_ERROR = `${base}FETCH_SONG_DETAILS_ERROR`;\nexport const FETCH_SONG_DETAILS_SUCCESS = `${base}FETCH_SONG_DETAILS_SUCCESS`;\n\nexport const PLAY_SONG = `${base}PLAY_SONG`;\nexport const PLAYING_SONG_ERROR = `${base}PLAYING_SONG_ERROR`;\nexport const PLAYING_SONG_SUCCESS = `${base}PLAYING_SONG_SUCCESS`;\nexport const PAUSE_SONG = `${base}PAUSE_SONG`;\nexport const PLAYING_SONG_PROGRESS = `${base}PLAYING_SONG_PROGRESS`;\nexport const PLAY_SONG_COMPLETED = `${base}PLAY_SONG_COMPLETED`;\n","import type { Song } from '../../types';\nimport {\n    PAUSE_SONG,\n    PLAY_SONG,\n    PLAYING_SONG_ERROR,\n    PLAYING_SONG_PROGRESS,\n    PLAYING_SONG_SUCCESS,\n    FETCH_SONG_DETAILS,\n    FETCH_SONG_DETAILS_ERROR,\n    FETCH_SONG_DETAILS_SUCCESS,\n} from './constants';\n\nexport function getSong(id: string) {\n    return {\n        type: FETCH_SONG_DETAILS,\n        id,\n    };\n}\n\nexport function songFetchError(error) {\n    return {\n        type: FETCH_SONG_DETAILS_ERROR,\n        error,\n    };\n}\n\nexport function songFetchSuccess(song: Song) {\n    return {\n        type: FETCH_SONG_DETAILS_SUCCESS,\n        song,\n    };\n}\n\nexport function playSong(song: Song) {\n    return {\n        type: PLAY_SONG,\n        song,\n    };\n}\n\nexport function pauseSong() {\n    return {\n        type: PAUSE_SONG,\n    };\n}\n\nexport function playingSong() {\n    return {\n        type: PLAYING_SONG_SUCCESS,\n    };\n}\n\nexport function playingSongProgress(progress: number, isPlaying: boolean) {\n    return {\n        type: PLAYING_SONG_PROGRESS,\n        progress,\n        isPlaying,\n    };\n}\n\nexport function playingSongError(error) {\n    return {\n        type: PLAYING_SONG_ERROR,\n        error,\n    };\n}\n","const base = '@@Containers/SongListContainer/';\n\nexport const GET_SONGS = `${base}GET_SONGS`;\nexport const GET_SONGS_SUCCESS = `${base}GET_SONGS_SUCCESS`;\nexport const GET_SONGS_ERROR = `${base}GET_SONGS_ERROR`;\n","// @flow\nimport type { SongsInfo } from '../../types';\nimport { GET_SONGS, GET_SONGS_SUCCESS, GET_SONGS_ERROR } from './constants';\n\nconst initialSongsInfo : SongsInfo = {\n    songs: [],\n    loading: 0,\n    error: null,\n};\n\nconst songs = (state : SongsInfo = initialSongsInfo, action : any) : SongsInfo => {\n    switch (action.type) {\n        case GET_SONGS:\n            return { ...state, loading: true, error: null };\n        case GET_SONGS_SUCCESS:\n            return { ...state, songs: action.songs, loading: false, error: null };\n        case GET_SONGS_ERROR: {\n            return { ...state, loading: false, error: action.error };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default songs;\n","const base = '@@Containers/QueueContainer/';\n\nexport const ADD_TO_QUEUE = `${base}ADD_TO_QUEUE`;\n","// @flow\nimport type { SongsInfo } from '../../types';\nimport { ADD_TO_QUEUE } from './constants';\n\nconst initialQueue: SongsInfo = {\n    songs: [],\n    loading: 0,\n    error: null,\n};\n\nconst queue = (state: SongsInfo = initialQueue, action: any): SongsInfo => {\n    switch (action.type) {\n        case ADD_TO_QUEUE: {\n            const newState = { ...state };\n            if (newState.songs && newState.songs.length) {\n                const index = newState.songs.findIndex(item => item._id === action.song._id);\n                if (index > -1) {\n                    newState.songs = [action.song, ...newState.songs.slice(0, index),\n                        ...newState.songs.slice(index + 1, newState.songs.length)];\n                } else {\n                    newState.songs = [action.song, ...newState.songs];\n                }\n                return newState;\n            }\n            return { songs: [action.song] };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default queue;\n","export const base = '@@Socket/';\n\nexport const NEW_SONGS_PLAYED = `${base}NEW_SONGS_PLAYED`;\nexport const SONG_RECOMMENDED = `${base}SONG_RECOMMENDED`;\n","import type { Song } from '../types';\nimport {\n    SONG_RECOMMENDED,\n} from './constants';\n\nexport const initialSong: Song = {\n    _id: null,\n    name: null,\n    duration: 0,\n    description: null,\n    license: null,\n    size: null,\n    path: null,\n    composer: [],\n    tags: [],\n    category: null,\n    error: null,\n    isPlaying: false,\n    progress: 0,\n    loading: false,\n};\n\nconst trendingSong = (state: Song = initialSong, action: any): Song => {\n    switch (action.type) {\n        case SONG_RECOMMENDED:\n            return { ...action.song, error: null, loading: true };\n        default:\n            return state;\n    }\n};\n\nexport default trendingSong;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport songs from '../containers/SongListContainer/reducers';\nimport currentSong from '../containers/SongDetailsContainer/reducers';\nimport queue from '../containers/QueueContainer/reducers';\nimport trendingSong from '../sockets/reducers';\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    songs,\n    currentSong,\n    queue,\n    trendingSong,\n});\n\nexport default rootReducer;\n","import axios from 'axios';\nimport { API_ENDPOINT } from '../config';\naxios.defaults.baseURL = API_ENDPOINT;\n\n// eslint-disable-next-line\nexport const GetSongs = async (page: ?number, perPage: ?number) => {\n    try {\n        const { data } = await axios.get('music/', { params: { page, perPage } });\n        return { error: null, res: data };\n    } catch (error) {\n        return { error, res: null };\n    }\n};\n\n// eslint-disable-next-line\nexport const GetSong = async (id : string) => {\n    try {\n        const { data } = await axios.get(`music/${id}`);\n        return { error: null, res: data };\n    } catch (error) {\n        return { error, res: null };\n    }\n};\n","export const API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\nexport const SOCKET_ENDPOINT = process.env.REACT_APP_SOCKET_ENDPOINT;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { songsLoaded, songLoadingError } from './actions';\nimport { GetSongs } from '../../services';\n\nimport {\n    GET_SONGS,\n} from './constants';\n\nfunction* GetLatestSongs() : void {\n    const { error, res } = yield call(GetSongs, 0, 20); // TODO -- need to fix pagination\n    if (res) {\n        yield put(songsLoaded(res));\n    } else {\n        yield put(songLoadingError(error));\n    }\n}\n\nexport function* watchMusicListAsync() {\n    yield takeLatest(GET_SONGS, GetLatestSongs);\n}\n","import type { Song } from '../types';\nimport { SONG_RECOMMENDED, NEW_SONGS_PLAYED } from './constants';\n\n\nexport function songRecommended(song: Song) {\n    return {\n        type: SONG_RECOMMENDED,\n        data: song,\n    };\n}\n\nexport function newSongPlayed(song: Song) {\n    return {\n        type: NEW_SONGS_PLAYED,\n        data: song,\n    };\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { songFetchError, songFetchSuccess, playSong } from './actions';\nimport { addToQueue } from '../QueueContainer/actions';\nimport {\n    FETCH_SONG_DETAILS,\n} from './constants';\nimport { GetSong } from '../../services';\nimport { newSongPlayed } from '../../sockets/actions';\n\nfunction* GetSelectedSong(payload: any) {\n    const { error, res } = yield call(GetSong, payload.id);\n    if (res) {\n        yield put(songFetchSuccess(res));\n        yield put(playSong(res));\n        yield put(addToQueue(res));\n        yield put(newSongPlayed(res));\n    } else {\n        yield put(songFetchError(error));\n    }\n}\n\nexport function* watchMusicAsync() {\n    yield takeLatest(FETCH_SONG_DETAILS, GetSelectedSong);\n}\n","import { ADD_TO_QUEUE } from './constants';\nimport type { Song } from '../../types';\n\nexport function addToQueue(song:Song) {\n    return {\n        type: ADD_TO_QUEUE,\n        song,\n    };\n}\n","// @flow\n\nimport { all, fork } from 'redux-saga/effects';\nimport { watchMusicListAsync } from '../containers/SongListContainer/sagas';\nimport { watchMusicAsync } from '../containers/SongDetailsContainer/sagas';\n\nexport default function* rootSaga() {\n    yield all([\n        fork(watchMusicListAsync),\n        fork(watchMusicAsync),\n    ]);\n}\n","import createSocketIoMiddleware from 'redux-socket.io';\nimport io from 'socket.io-client';\nimport { SOCKET_ENDPOINT } from '../config';\nimport { base } from './constants';\n\nconst configureSocket = () => {\n    const socket = io(SOCKET_ENDPOINT);\n    return createSocketIoMiddleware(socket, base);\n};\n\nexport default configureSocket;\n","import { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\nimport configureSocket from '../sockets';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['songs'],\n};\n\nconst configureStore = (history: any) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const routeMiddleware = routerMiddleware(history);\n    const persistedReducer = persistReducer(persistConfig, rootReducer(history));\n    const socketMiddleware = configureSocket();\n\n    // removing redux logging in production\n    const middleware = process.env.NODE_ENV !== 'production' ? [sagaMiddleware, routeMiddleware, socketMiddleware]\n        : [sagaMiddleware, routeMiddleware, socketMiddleware, createLogger()];\n\n    // use devtools if developer chrome devtools in installed\n    const composeEnhancer = process.env.NODE_ENV === 'production'\n        && typeof window === 'object'\n        && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\n    const store = createStore(\n        persistedReducer,\n        composeEnhancer(\n            applyMiddleware(...middleware))\n    );\n    sagaMiddleware.run(rootSaga);\n    const persistor = persistStore(store);\n    return { store, persistor };\n};\n\nexport default configureStore;\n","import createHistory from 'history/createBrowserHistory';\nconst history = createHistory({ basename: 'blue-macaw-client/' });\nexport default history;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst getWrapperClass = (isInline, isInlineCover) => {\n    if (isInline) {\n        return 'inline-loading-container-wrapper';\n    } if (isInlineCover) {\n        return 'loading-container-wrapper inline-cover';\n    }\n    return 'loading-container-wrapper';\n};\n\nconst getLoaderClass = (isInline, isInlineCover) => {\n    if (isInline) {\n        return 'inline-loading-container';\n    } if (isInlineCover) {\n        return 'loading-container inline-cover';\n    }\n    return 'loading-container';\n};\n\nconst LoadingWrapper = ({ children, isInline, isInlineCover }) => (\n    <div className={getWrapperClass(isInline, isInlineCover)}>\n        <div className={getLoaderClass(isInline, isInlineCover)}>{children}</div>\n    </div>\n);\n\nLoadingWrapper.propTypes = {\n    children: PropTypes.object,\n    isInline: PropTypes.bool,\n    isInlineCover: PropTypes.bool,\n};\n\nconst Loading = props => {\n    const { error, pastDelay, timedOut, isInline, isInlineCover } = props;\n    if (error) {\n        return (\n            <LoadingWrapper isInline={isInline} isInlineCover={isInlineCover}>\n                <p>Something went wrong!</p>\n            </LoadingWrapper>\n        );\n    }\n    if (pastDelay || timedOut) {\n        return (\n            <LoadingWrapper isInline={isInline} isInlineCover={isInlineCover}>\n                <span>\n                    <div className=\"dot\" />\n                    <div className=\"dot\" />\n                    <div className=\"dot\" />\n                </span>\n            </LoadingWrapper>\n        );\n    }\n    return null;\n};\n\nLoading.propTypes = {\n    error: PropTypes.bool,\n    timedOut: PropTypes.bool,\n    pastDelay: PropTypes.bool,\n    isInline: PropTypes.bool,\n    isInlineCover: PropTypes.bool,\n};\n\nexport default Loading;\n","import Loadable from 'react-loadable';\nimport Loader from '../components/common/Loader';\n\nexport default Component => Loadable({\n    loader: Component,\n    loading: Loader,\n    delay: 0,\n    timeout: 100,\n});\n","import loadAsync from '../../utils/loadAsync';\n\nexport default loadAsync(() => import('./NotFound.js'));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport classnames from 'classnames';\nimport { grey } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\nimport type { Song } from '../../types';\nimport { primaryColorDark } from '../../theme/Colors';\n\ntype Props = {\n    classes: any,\n    currentSong: Song,\n    song: Song,\n    pauseSong: Function,\n    playingSong: Function,\n    playSong: Function\n}\n\nconst styles = () => ({\n    container: {\n        cursor: 'pointer',\n        margin: 0,\n        padding: 0,\n    },\n    leftBorder: {\n        borderLeft: `5px solid${primaryColorDark}`,\n    },\n    button: {\n        margin: 0,\n        width: '100%',\n    },\n    imageIcon: {\n        width: 64,\n        height: 64,\n    },\n    listItem: {\n        margin: 0,\n        padding: 0,\n    },\n    icon: {\n        fontSize: 64,\n    },\n    name: {\n        color: grey[700],\n        fontSize: 14,\n    },\n\n});\n\nfunction QueueItem(props: Props) {\n    const { classes, song, currentSong, pauseSong, playSong, playingSong } = props;\n    const isSame = song._id === currentSong._id;\n\n\n    const changeSong = () => {\n        if (isSame) {\n            if (currentSong.isPlaying) {\n                pauseSong();\n            } else {\n                playingSong();\n            }\n        } else {\n            playSong(song);\n        }\n    };\n\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            spacing={0}\n            className={classnames({\n                [classes.container]: true,\n                [classes.leftBorder]: isSame,\n            })}\n        >\n            <Divider />\n            <ButtonBase\n                className={classes.button}\n                onClick={changeSong}\n            >\n                <Grid\n                    container\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    spacing={0}\n                    className={classes.listItem}\n                >\n                    <Hidden mdDown>\n                        <Grid\n                            item\n                            xs={4}\n                            md={6}\n                            sm={false}\n                        >\n                            <img\n                                className={classes.imageIcon}\n                                src={song.image}\n                                alt={song.name}\n                            />\n                        </Grid>\n                    </Hidden>\n                    <Grid\n                        item\n                        md={6}\n                        sm={false}\n                    >\n                        <Typography\n                            noWrap\n                            className={classes.name}\n                        >\n                            {song.name}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </ButtonBase>\n        </Grid>\n    );\n}\n\nQueueItem.propTypes = {\n    classes: PropTypes.any.isRequired,\n    currentSong: PropTypes.any.isRequired,\n    song: PropTypes.any.isRequired,\n    playSong: PropTypes.func.isRequired,\n    playingSong: PropTypes.func.isRequired,\n    pauseSong: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QueueItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { grey } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport QueueItem from './QueueItem';\nimport type { Song } from '../../types';\n\ntype Props = {\n    classes: any,\n    playSong: Function,\n    pauseSong: Function,\n    playingSong: Function,\n    songs: Array<Song>,\n    currentSong: Song,\n}\n\nconst styles = () => ({\n    center: {\n        color: grey[700],\n    },\n});\n\nfunction Queue(props: Props) {\n    const { classes, songs, currentSong, pauseSong, playSong, playingSong } = props;\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            alignItems=\"stretch\"\n            justify=\"flex-start\"\n        >\n            <Typography\n                align=\"center\"\n                variant=\"h6\"\n                className={classes.center}\n            >\nQueue\n            </Typography>\n            <List className={classes.container}>\n                {songs && songs.map(song => (\n                    <QueueItem\n                        key={song._id}\n                        currentSong={currentSong}\n                        pauseSong={pauseSong}\n                        playingSong={playingSong}\n                        playSong={playSong}\n                        song={song}\n                    />\n                ))}\n                <Divider />\n            </List>\n        </Grid>\n    );\n}\n\nQueue.propTypes = {\n    classes: PropTypes.any.isRequired,\n    currentSong: PropTypes.any.isRequired,\n    songs: PropTypes.any,\n    playSong: PropTypes.func.isRequired,\n    pauseSong: PropTypes.func.isRequired,\n    playingSong: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Queue);\n","import get from 'lodash/get';\nimport { createSelector } from 'reselect';\n\nexport const selectQueue = state => get(state, 'queue');\n\nexport const makeQueueIsLoading = () => createSelector([selectQueue], state => get(state, 'loading', false));\n\nexport const makeQueueSongsList = () => createSelector([selectQueue], state => get(state, 'songs', []),\n);\n\nexport const makeQueueError = () => createSelector([selectQueue], state => get(state, 'error', null),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Queue from '../../components/Queue';\nimport {\n    makeQueueError,\n    makeQueueSongsList,\n    makeQueueIsLoading,\n} from './selectors';\n\nimport { makeSelectSong } from '../SongDetailsContainer/selectors';\nimport type { Song } from '../../types';\nimport { pauseSong, playSong, playingSong } from '../SongDetailsContainer/actions';\n\ntype Props = {\n    pauseSong: Function,\n    playSong: Function,\n    playingSong: Function,\n    songs: Array<Song>,\n    currentSong: Song,\n}\n\nfunction QueueContainer(props: Props) {\n    return (\n        <Queue\n            {...props}\n        />\n    );\n}\n\nQueueContainer.propTypes = {\n    playingSong: PropTypes.func.isRequired,\n    playSong: PropTypes.func.isRequired,\n    pauseSong: PropTypes.func.isRequired,\n    songs: PropTypes.any.isRequired,\n    currentSong: PropTypes.any.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    playSong: (song: Song) => {\n        dispatch(playSong(song));\n    },\n    pauseSong: () => {\n        dispatch(pauseSong());\n    },\n    playingSong: () => {\n        dispatch(playingSong());\n    },\n});\n\nconst mapStateToProps = createStructuredSelector({\n    songs: makeQueueSongsList(),\n    currentSong: makeSelectSong(),\n    loading: makeQueueIsLoading(),\n    error: makeQueueError(),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(QueueContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { primaryColorDark } from '../../theme/Colors';\nimport type { Song } from '../../types';\n\ntype Props = {\n    classes: any,\n    currentSong: Song\n}\n\nconst styles = () => ({\n    container: {\n        flex: 1,\n    },\n    songName: {\n        color: primaryColorDark,\n        margin: 10,\n    },\n    imageIcon: {\n        width: 64,\n        height: 64,\n    },\n    listItem: {\n        margin: 0,\n        padding: 0,\n    },\n    icon: {\n        fontSize: 64,\n    },\n    heading: {\n        color: primaryColorDark,\n        fontSize: 14,\n        overflow: 'hidden',\n        wordSpace: 'nowrap',\n        marginBottom: 10,\n    },\n    description: {\n        color: 'white',\n        fontSize: 14,\n        overflow: 'hidden',\n        wordSpace: 'nowrap',\n        maxWidth: 300,\n    },\n});\n\nfunction Details(props: Props) {\n    const { classes, currentSong } = props;\n    return (\n        <Grid container direction=\"row\" alignItems=\"center\" className={classes.listItem}>\n            <Grid item xs={3}>\n                <img alt={currentSong.name} className={classes.imageIcon} src={currentSong.image} />\n            </Grid>\n            <Grid item xs={9} container direction=\"column\">\n                <Typography noWrap variant=\"inherit\" className={classes.heading}>{currentSong.name}</Typography>\n                <Typography noWrap variant=\"inherit\" className={classes.description}>{currentSong.description}</Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nDetails.propTypes = {\n    classes: PropTypes.any.isRequired,\n    currentSong: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles)(Details);\n","const formatSeconds = (seconds) => {\n    const minutes = (seconds % 3600) / 60;\n\n    const sec = seconds % 60;\n    return [minutes, sec].map(format).join(':');\n};\n\nconst format = (val) => (`0${Math.floor(val)}`).slice(-2);\n\nexport default formatSeconds;\n","/* eslint-disable */\n// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport FastForward from '@material-ui/icons/FastForward';\nimport FastRewind from '@material-ui/icons/FastRewind';\nimport Slider from '@material-ui/lab/Slider';\nimport Button from '@material-ui/core/es/Button/Button';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport debounce from 'lodash/debounce';\nimport formatSeconds from '../../utils/formatSeconds';\nimport type { Song } from '../../types';\n\ntype Props = {\n    classes: any,\n    playingSong: Function,\n    playingSongProgress: Function,\n    pauseSong: Function,\n    currentSong: Song,\n}\n\nconst styles = () => ({\n    container: {\n        flex: 1,\n    },\n    play: {\n        fontSize: 64,\n        color: 'white',\n    },\n    icon: {\n        fontSize: 30,\n        color: 'white',\n    },\n    timing: {\n        color: 'white',\n        fontSize: 24,\n        marginRight: 10,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n});\n\ntype State = {}\n\nclass TrackInformation extends React.PureComponent<Props, State> {\n    state = {\n        progress: 0,\n        // eslint-disable-next-line\n        play: this.props.autoplay || false,\n        duration: '00:00',\n        currentTime: '00:00',\n    };\n\n    debounced = debounce((fn, data, event) => {\n        fn(data, event);\n    }, 100);\n\n    static propTypes = {\n        autoplay: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        autoplay: true,\n    };\n\n    componentDidMount() {\n        const { audioContainer } = this;\n        audioContainer.addEventListener('timeupdate', this.updateProgress.bind(this));\n        audioContainer.addEventListener('ended', this.end.bind(this));\n        audioContainer.addEventListener('pause', this.onChange.bind(this));\n        audioContainer.addEventListener('play', this.onChange.bind(this));\n        audioContainer.addEventListener('error', this.onChange.bind(this));\n        audioContainer.addEventListener('canplay', this.onChange.bind(this));\n    }\n\n    componentWillUnmount() {\n        const { audioContainer } = this;\n        audioContainer.removeEventListener('timeupdate', this.updateProgress.bind(this));\n        audioContainer.removeEventListener('ended', this.end.bind(this));\n        audioContainer.removeEventListener('pause', this.onChange.bind(this));\n        audioContainer.removeEventListener('play', this.onChange.bind(this));\n        audioContainer.removeEventListener('error', this.onChange.bind(this));\n        audioContainer.removeEventListener('canplay', this.onChange.bind(this));\n    }\n\n    onChange() {\n        const { duration, currentTime } = this.audioContainer;\n        const { playingSongProgress } = this.props;\n        const progress = currentTime / duration * 100;\n        playingSongProgress(progress, this.isPlaying());\n    }\n\n    updateProgress() {\n        const { duration, currentTime } = this.audioContainer;\n        const { playingSongProgress } = this.props;\n        const progress = currentTime / duration * 100;\n        playingSongProgress(progress, this.isPlaying());\n        this.setState({\n            progress,\n            duration: formatSeconds(duration),\n            currentTime: formatSeconds(currentTime),\n            play: true,\n        });\n    }\n\n\n    end() {\n        // FIXME -- need to check this.handleNext()\n    }\n\n    handleAdjustProgress(event, value) {\n        const { playingSongProgress } = this.props;\n        this.debounced.cancel();\n        this.debounced(() => {\n            this.audioContainer.pause();\n            const progress = value / 100;\n            const currentTime = this.audioContainer.duration * progress;\n            this.audioContainer.currentTime = currentTime;\n            this.setState({\n                play: true,\n                progress,\n            }, () => {\n                playingSongProgress(progress, this.isPlaying());\n                this.audioContainer.play();\n            });\n        }, 100);\n    }\n\n    isPlaying() {\n        return this.audioContainer\n            && this.audioContainer.currentTime > 0\n            && !this.audioContainer.paused\n            && !this.audioContainer.ended\n            && this.audioContainer.readyState > 2;\n    }\n\n    handleToggle() {\n        const { playingSong, pauseSong } = this.props;\n        if (!this.isPlaying()) {\n            playingSong();\n            this.audioContainer.play();\n        } else {\n            pauseSong();\n            this.audioContainer.pause();\n        }\n        this.setState({ play: !this.isPlaying() });\n    }\n\n    render() {\n        const { classes, currentSong } = this.props;\n        const { progress, duration, currentTime, play } = this.state;\n        const isPlaying = this.isPlaying();\n        return (\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"space-between\"\n            >\n                <audio\n                    autoPlay={play}\n                    preload=\"auto\"\n                    ref={ref => {\n                        this.audioContainer = ref;\n                    }}\n                    src={currentSong.url}\n                />\n                <Grid>\n                    <Slider\n                        variant=\"determinate\"\n                        value={progress}\n                        onChange={(e, v) => this.handleAdjustProgress(e, v)}\n                        aria-labelledby=\"label\"\n                    />\n                </Grid>\n                <Grid\n                    container\n                    justify=\"space-around\"\n                    direction=\"row\"\n                    alignItems=\"center\"\n                >\n                    <Grid\n                        item\n                        className={classes.grow}\n                    >\n                        <Button>\n                            <FastRewind className={classes.icon} />\n                        </Button>\n                        <Button onClick={() => this.handleToggle()}>\n                            {!isPlaying && <PlayArrow className={classes.play} />}\n                            {isPlaying && <Pause className={classes.play} />}\n                        </Button>\n                        <Button>\n                            <FastForward className={classes.icon} />\n                        </Button>\n                    </Grid>\n                    <Typography className={classes.timing}>\n                        {currentTime}\n/\n                        {duration}\n                    </Typography>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nTrackInformation.propTypes = {\n    classes: PropTypes.any.isRequired,\n    playingSong: PropTypes.func.isRequired,\n    playingSongProgress: PropTypes.func.isRequired,\n    pauseSong: PropTypes.func.isRequired,\n    currentSong: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles)(TrackInformation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Details from './Details';\nimport TrackInformation from './TrackInformation';\nimport type { Song } from '../../types';\n\ntype Props = {\n    classes: any,\n    playingSong: Function,\n    pauseSong: Function,\n    currentSong: Song\n}\n\nconst styles = () => ({\n    container: {\n        flex: 1,\n    },\n    details: {\n        borderRight: '3px solid grey',\n        margin: 10,\n        flex: 1,\n    },\n    progress: {\n        flex: 1,\n    },\n});\n\nfunction MusicPlayer(props: Props) {\n    const { classes, currentSong, playingSong, playingSongProgress, pauseSong } = props;\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            alignItems=\"stretch\"\n            alignContent=\"stretch\"\n            className={classes.container}\n        >\n            <Grid\n                md={3}\n                lg={3}\n                xs={false}\n                item\n                className={classes.details}\n            >\n                <Details currentSong={currentSong} />\n            </Grid>\n            <Grid\n                md={9}\n                lg={9}\n                xs={12}\n                item\n                className={classes.progress}\n            >\n                <TrackInformation\n                    currentSong={currentSong}\n                    playingSong={playingSong}\n                    playingSongProgress={playingSongProgress}\n                    pauseSong={pauseSong}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nMusicPlayer.propTypes = {\n    classes: PropTypes.any.isRequired,\n    playingSong: PropTypes.func.isRequired,\n    playingSongProgress: PropTypes.func.isRequired,\n    pauseSong: PropTypes.func.isRequired,\n    currentSong: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles)(MusicPlayer);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport MusicPlayer from '../../../components/MusicPlayer';\nimport { playingSong, playingSongProgress, pauseSong } from '../actions';\nimport {\n    makeSelectIsLoading,\n    makeSelectSong,\n    makeSelectSongError,\n} from '../selectors';\nimport type { Song } from '../../../types';\n\ntype Props = {\n    playingSong: Function,\n    playingSongProgress: Function,\n    pauseSong: Function,\n    currentSong: Song,\n}\n\nclass SongTrackContainer extends PureComponent <Props, void> {\n    render() {\n        return (\n            <MusicPlayer\n                {...this.props}\n            />\n        );\n    }\n}\n\nSongTrackContainer.propTypes = {\n    playingSong: PropTypes.func.isRequired,\n    playingSongProgress: PropTypes.func.isRequired,\n    pauseSong: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    playingSong: () => {\n        dispatch(playingSong());\n    },\n    playingSongProgress: (progress: number, isPlaying: boolean) => {\n        dispatch(playingSongProgress(progress, isPlaying));\n    },\n    pauseSong: (song: Song) => {\n        dispatch(pauseSong(song));\n    },\n});\n\nconst mapStateToProps = createStructuredSelector({\n    currentSong: makeSelectSong(),\n    loading: makeSelectIsLoading(),\n    error: makeSelectSongError(),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SongTrackContainer);\n","import loadAsync from '../../utils/loadAsync';\n\nexport default loadAsync(() => import('./SongListContainer.js'));\n","import loadAsync from '../../../utils/loadAsync';\n\nexport default loadAsync(() => import('./SongsDetailsContainer.js'));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n    avatar: {\n        margin: 10,\n        pointer: 'cursor',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n});\n\ntype Props = {\n    classes: any,\n    component: any,\n}\n\nfunction Footer(props: Props) {\n    const { classes, component } = props;\n    return (\n        <AppBar\n            position=\"fixed\"\n            color=\"primary\"\n            className={classes.appBar}\n        >\n            {component}\n        </AppBar>\n    );\n}\n\n\nFooter.propTypes = {\n    classes: PropTypes.object.isRequired,\n    component: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles)(Footer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport Menu from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport { grey } from '@material-ui/core/colors';\nimport QueueContainer from '../../containers/QueueContainer/QueueContainer';\n\nconst styles = theme => ({\n    avatar: {\n        margin: 10,\n        pointer: 'cursor',\n    },\n    grow: {\n        flexGrow: 1,\n        color: 'white',\n    },\n    button: {\n        margin: 0,\n        padding: 0,\n    },\n    hamburger: {\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    verticalNavigation: {\n        flex: 1,\n        minWidth: 300,\n        paddingTop: 50,\n        backgroundColor: grey[300],\n    },\n    menu: {\n        color: 'white',\n    },\n});\n\ntype Props = {\n    classes: any,\n}\n\ntype State = {\n    isDrawerVisible: boolean\n}\n\nclass Header extends Component<Props, State> {\n    state = {\n        isDrawerVisible: false,\n    };\n\n    showDrawer() {\n        this.setState({\n            isDrawerVisible: true,\n        });\n    }\n\n    hideDrawer() {\n        this.setState({\n            isDrawerVisible: false,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isDrawerVisible } = this.state;\n        return (\n            <AppBar\n                position=\"fixed\"\n                color=\"primary\"\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"contrast\"\n                        className={classes.hamburger}\n                        onClick={() => this.showDrawer()}\n                        aria-label=\"Menu\"\n                    >\n                        <Menu className={classes.menu} />\n                    </IconButton>\n                    <Button\n                        component={Link}\n                        className={classes.button}\n                        to=\"/\"\n                    >\n                        <Avatar\n                            alt=\"Blue Macaw Music App\"\n                            src=\"/images/logo.jpeg\"\n                            className={classes.avatar}\n                        />\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={classes.grow}\n                        >\n                            Blue Macaw Music App\n                        </Typography>\n                    </Button>\n                </Toolbar>\n                <Drawer\n                    anchor=\"left\"\n                    open={isDrawerVisible}\n                    onClose={() => this.hideDrawer()}\n                >\n                    <Grid\n                        className={classes.verticalNavigation}\n                        container\n                        alignItems=\"center\"\n                        justify=\"flex-start\"\n                        spacing={0}\n                        direction=\"column\"\n                    >\n                        <QueueContainer />\n                    </Grid>\n                </Drawer>\n            </AppBar>\n        );\n    }\n}\n\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","// @flow\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Route, Switch } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport { grey } from '@material-ui/core/colors';\nimport Hidden from '@material-ui/core/Hidden';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport type { Song } from '../../types';\nimport NotFound from '../NotFound';\nimport QueueContainer from '../QueueContainer/QueueContainer';\nimport SongTrackContainer from '../SongDetailsContainer/Track/SongTrackContainer';\nimport SongListContainer from '../SongListContainer';\nimport SongDetailsContainer from '../SongDetailsContainer/Details';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\n\ntype Props = {\n    classes: any,\n    trendingSong: Song,\n}\n\ntype State = {\n    song: Song\n}\n\nconst styles = theme => ({\n    queue: {\n        backgroundColor: grey[300],\n        height: '100%',\n        overflowY: 'auto',\n        marginBottom: 70,\n    },\n    container: {\n        background: grey[100],\n        height: '100%',\n    },\n    container1: {\n        background: grey[100],\n        flexGrow: 1,\n        paddingTop: 70,\n    },\n    content: {\n        flexGrow: 1,\n        marginBottom: 70,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\nclass App extends Component<Props, State> {\n    state = {\n        open: false,\n        // eslint-disable-next-line\n        song: this.props.trendingSong,\n    };\n\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n        if (nextProps.trendingSong._id !== prevState.song._id) {\n            return { open: true, song: nextProps.trendingSong };\n        }\n        return null;\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { song, open } = this.state;\n        return (\n            <Grid\n                container\n                className={classes.container}\n            >\n                <Header />\n                <Grid\n                    container\n                    direction=\"row\"\n                    spacing={0}\n                    className={classes.container1}\n                    wrap=\"nowrap\"\n                    xs={12}\n                >\n                    <Hidden smDown>\n                        <Grid\n                            item\n                            sm={false}\n                            md={1}\n                            lg={2}\n                            className={classes.queue}\n                        >\n                            <QueueContainer />\n                        </Grid>\n                    </Hidden>\n                    <Grid\n                        item\n                        xs={12}\n                        md={11}\n                        lg={11}\n                        className={classes.content}\n                    >\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                component={SongListContainer}\n                            />\n                            <Route\n                                path=\"/song/:id\"\n                                component={SongDetailsContainer}\n                            />\n                            <Route\n                                path=\"*\"\n                                component={NotFound}\n                            />\n                        </Switch>\n                    </Grid>\n                </Grid>\n                <Footer component={<SongTrackContainer />} />\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{`New Trending Song - ${song.name}`}</span>}\n                    action={[\n                        <Button\n                            key=\"open\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            component={Link}\n                            to={`song/${song._id}`}\n                        >\n                            Open\n                        </Button>,\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.handleClose}\n                        >\n                            <Close />\n                        </IconButton>,\n                    ]}\n                />\n            </Grid>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.any.isRequired,\n    trendingSong: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","import get from 'lodash/get';\nimport { createSelector } from 'reselect';\n\nexport const selectTrending = state => get(state, 'trendingSong');\n\nexport const makeTrendingIsLoading = () => createSelector([selectTrending], state => get(state, 'loading', false));\n\nexport const makeTrendingSong = () => createSelector([selectTrending], state => state);\n\nexport const makeTrendingError = () => createSelector([selectTrending], state => get(state, 'error', null),\n);\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport AppContainer from './AppContainer';\nimport { makeTrendingError, makeTrendingSong, makeTrendingIsLoading } from './selectors';\n\n\ntype Props = {\n    classes: any\n}\n\nfunction App(props: Props) {\n    return (\n        <AppContainer {...props} />\n    );\n}\n\nApp.propTypes = {\n    classes: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n    trendingSong: makeTrendingSong(),\n    error: makeTrendingError(),\n    loading: makeTrendingIsLoading(),\n});\n\nexport default connect(\n    mapStateToProps\n)(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nimport {\n    primaryColor,\n    primaryColorDark,\n    primaryColorLight,\n    accentColor,\n    accentColorDark,\n    accentColorLight,\n    primaryText,\n    errorColor,\n    backgroundColorDark,\n    backgroundDarkGradient,\n} from './Colors';\n\nconst BlueMacawTheme = createMuiTheme({\n    typography: {\n        fontFamily: '\"Inconsolata\", sans-serif',\n        fontSize: 15,\n    },\n\n    palette: {\n        primary: {\n            light: primaryColorLight,\n            main: primaryColor,\n            dark: primaryColorDark,\n            contrastText: primaryText,\n        },\n        secondary: {\n            light: accentColorLight,\n            main: accentColor,\n            dark: accentColorDark,\n            contrastText: primaryText,\n        },\n        error: { main: errorColor },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n    },\n\n    overrides: {\n        MuiAppBar: {\n            colorPrimary: {\n                background: backgroundDarkGradient,\n                backgroundColor: 'transparent',\n            },\n            positionAbsolute: {\n                top: 'auto',\n            },\n        },\n        MuiButton: {\n            label: {\n                fontFamily: '\"Montserrat\", sans-serif',\n            },\n        },\n        MuiSnackbarContent: {\n            root: {\n                backgroundColor: primaryColorDark,\n            },\n        },\n        MuiDrawer: {\n            paper: {\n                backgroundColor: backgroundColorDark,\n                color: primaryText,\n            },\n        },\n        MuiTooltip: {\n            tooltip: {\n                background: backgroundDarkGradient,\n            },\n        },\n        MuiLinearProgress: {\n            root: {\n                height: '0.25rem',\n            },\n            colorSecondary: {\n                backgroundColor: 'transparent',\n            },\n        },\n    },\n});\n\nexport default BlueMacawTheme;\n","// @flow\nimport React from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport configureStore from './store/configureStore';\nimport history from './utils/history';\nimport App from './containers/App';\nimport BlueMacawTheme from './theme/Theme';\n\nconst { store, persistor } = configureStore(history);\n\nconst theme = createMuiTheme(BlueMacawTheme);\n\n\nexport default function AppContainer() {\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <ConnectedRouter history={history}>\n                    <MuiThemeProvider theme={theme}>\n                        <CssBaseline />\n                        <App />\n                    </MuiThemeProvider>\n                </ConnectedRouter>\n            </PersistGate>\n        </Provider>\n    );\n}\n","/* eslint-disable no-console, no-param-reassign, no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to formatSeconds a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. AppContainer is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import get from 'lodash/get';\nimport { createSelector } from 'reselect';\nimport { initialSong } from './reducers';\n\n\nexport const selectCurrentSong = state => get(state, 'currentSong', initialSong);\n\nexport const makeSelectIsLoading = () => createSelector([selectCurrentSong], state => get(state, 'loading', false));\n\nexport const makeSelectSong = () => createSelector([selectCurrentSong], state => state);\n\nexport const makeSelectSongError = () => createSelector([selectCurrentSong], state => get(state, 'error', null),\n);\n"],"sourceRoot":""}