{"version":3,"sources":["../node_modules/@material-ui/core/Card/index.js","../node_modules/@material-ui/core/Card/Card.js","components/SongList/SongItem.js","components/SongList/index.js","containers/SongListContainer/selectors.js","containers/SongListContainer/SongListContainer.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","enumerable","get","_Card","default","styles","_extends2","_objectWithoutProperties2","_react","_classnames","_Paper","_withStyles","root","overflow","Card","props","classes","className","raised","other","createElement","elevation","propTypes","defaultProps","_default","name","withStyles","container","padding","button","minWidth","&:hover","& .overlay","display","bottomBorder","borderBottom","concat","primaryColorDark","overlay","position","top","bottom","left","right","color","backgroundColor","play","fontSize","cover","width","card","margin","height","song","currentSong","playing","_id","react_default","a","Grid_default","item","xs","md","lg","Button_default","fullWidth","component","Link","to","Card_default","classnames","direction","alignItems","alignContent","justify","src","image","alt","Typography_default","noWrap","variant","PlayArrow_default","flex","header","marginLeft","marginTop","songs","spacing","Typography","map","SongList_SongItem","key","Divider_default","selectSongsList","state","SongListContainer","getSongs","this","components_SongList","Component","mapStateToProps","createStructuredSelector","createSelector","loading","error","makeSelectSong","connect","dispatch"],"mappings":"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","file":"static/js/2.c78b876a.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Card.default;\n  }\n});\n\nvar _Card = _interopRequireDefault(require(\"./Card\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Paper = _interopRequireDefault(require(\"../Paper\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\")); // @inheritedComponent Paper\n\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nexports.styles = styles;\n\nfunction Card(props) {\n  var classes = props.classes,\n      className = props.className,\n      raised = props.raised,\n      other = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"className\", \"raised\"]);\n  return _react.default.createElement(_Paper.default, (0, _extends2.default)({\n    className: (0, _classnames.default)(classes.root, className),\n    elevation: raised ? 8 : 1\n  }, other));\n}\n\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: _propTypes.default.bool\n} : {};\nCard.defaultProps = {\n  raised: false\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiCard'\n})(Card);\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport Grid from '@material-ui/core/Grid';\nimport { primaryColorDark } from '../../theme/Colors';\nimport type { Song } from '../../types';\n\ntype Props = {\n    classes: any,\n    song: Song,\n    currentSong: Song\n}\n\nconst styles = () => ({\n    container: {\n        padding: 10,\n    },\n    button: {\n        minWidth: 200,\n        padding: 0,\n\n        '&:hover': {\n            '& .overlay': {\n                display: 'flex',\n            },\n        },\n    },\n    bottomBorder: {\n        borderBottom: `5px solid${primaryColorDark}`,\n    },\n    overlay: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'none',\n        color: 'white',\n        backgroundColor: 'rgba(0,0,0, 0.3)',\n    },\n    play: {\n        fontSize: 200,\n    },\n    cover: {\n        width: 200,\n    },\n    card: {\n        margin: 0,\n        width: '100%',\n        height: '100%',\n    },\n});\n\nfunction SongItem(props: Props) {\n    const { classes, song, currentSong } = props;\n    const playing = song._id === currentSong._id;\n    return (\n        <Grid\n            item\n            className={classes.container}\n            xs={12}\n            md={6}\n            lg={3}\n        >\n            <Button\n                className={classes.button}\n                fullWidth\n                component={Link}\n                to={`song/${song._id}`}\n            >\n                <Card\n                    className={classnames({\n                        [classes.card]: true,\n                        [classes.bottomBorder]: playing,\n                    })}\n                >\n                    <Grid\n                        container\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        alignContent=\"center\"\n                        justify=\"center\"\n                    >\n                        <img\n                            className={classes.cover}\n                            src={song.image}\n                            alt={song.name}\n                        />\n                        <Typography\n                            noWrap={false}\n                            variant=\"body1\"\n                        >\n                            {song.name}\n                        </Typography>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            className={classnames({\n                                overlay: true,\n                                [classes.overlay]: true,\n                            })}\n                        >\n                            <PlayArrow className={classes.play} />\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Button>\n        </Grid>\n    );\n}\n\nSongItem.propTypes = {\n    classes: PropTypes.any.isRequired,\n    song: PropTypes.any,\n    currentSong: PropTypes.any.isRequired,\n};\n\nexport default withStyles(styles)(SongItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SongItem from './SongItem';\nimport { primaryColorDark } from '../../theme/Colors';\nimport type { Song } from '../../types';\n\ntype Props = {\n    classes: any,\n    songs: Array<Song>,\n    currentSong: Song\n\n}\n\nconst styles = () => ({\n    container: {\n        flex: 1,\n    },\n    header: {\n        color: primaryColorDark,\n        marginLeft: 20,\n        marginTop: 20,\n    },\n});\n\nfunction SongList(props: Props) {\n    const { classes, songs, currentSong } = props;\n    return (\n        <Grid\n            className={classes.container}\n            container\n            spacing={4}\n            direction=\"column\"\n        >\n            <Typography\n                variant=\"h6\"\n                className={classes.header}\n            >\nNew Release\n            </Typography>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={4}\n            >\n                {songs && songs.map(song => (\n                    <SongItem\n                        song={song}\n                        currentSong={currentSong}\n                        key={song._id}\n                    />\n                ))}\n            </Grid>\n            <Divider />\n        </Grid>\n    );\n}\n\nSongList.propTypes = {\n    classes: PropTypes.any.isRequired,\n    songs: PropTypes.any.isRequired,\n    currentSong: PropTypes.any.isRequired,\n\n};\n\nexport default withStyles(styles)(SongList);\n","import get from 'lodash/get';\nimport { createSelector } from 'reselect';\n\nexport const selectSongsList = state => get(state, 'songs');\n\nexport const makeSelectIsLoading = () => createSelector([selectSongsList], state => get(state, 'loading', false));\n\nexport const makeSelectSongsList = () => createSelector([selectSongsList], state => get(state, 'songs', []),\n);\n\nexport const makeSelectSongsListError = () => createSelector([selectSongsList], state => get(state, 'error', null),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport SongList from '../../components/SongList';\nimport { getSongs } from './actions';\nimport {\n    makeSelectIsLoading,\n    makeSelectSongsList,\n    makeSelectSongsListError,\n} from './selectors';\nimport { makeSelectSong } from '../SongDetailsContainer/selectors';\nimport type { Song } from '../../types';\n\ntype Props = {\n    getSongs: Function,\n    songs: Array<Song>,\n    currentSong: Song,\n}\n\nclass SongListContainer extends Component <Props, void> {\n    componentDidMount() {\n        // eslint-disable-next-line\n        const { getSongs } = this.props;\n        getSongs();\n    }\n\n    render() {\n        return (\n            <SongList\n                {...this.props}\n            />\n        );\n    }\n}\n\nSongListContainer.propTypes = {\n    getSongs: PropTypes.func.isRequired,\n    songs: PropTypes.any.isRequired,\n    currentSong: PropTypes.any.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    getSongs: () => {\n        dispatch(getSongs());\n    },\n});\n\nconst mapStateToProps = createStructuredSelector({\n    songs: makeSelectSongsList(),\n    loading: makeSelectIsLoading(),\n    error: makeSelectSongsListError(),\n    currentSong: makeSelectSong(),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SongListContainer);\n"],"sourceRoot":""}